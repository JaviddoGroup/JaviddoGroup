@media screen and (max-width: 6000060px) {
    .wrapper {
        display: block;
    }

    .images-container {
        display: none;
    }

    .item {
        display: block !important;
    }
}

@media screen and (min-width: 2560px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 29.55vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 120;
        background-color: white;
    }
}

@media screen and (max-width: 2560px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 29.55vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 120;
        background-color: white;

    }
}

@media screen and (max-width: 2160px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 29.5vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 120;
        background-color: white;

    }
}

@media screen and (max-width: 2000px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 29.55vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 120;
        background-color: white;
    }
}

@media screen and (max-width: 1900px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 35vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 127;
        background-color: white;

    }
}

@media screen and (max-width: 1800px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 35vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 127;
        background-color: white;

    }
}

@media screen and (max-width: 1700px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 35vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 127;
        background-color: white;

    }
}

@media screen and (max-width: 1600px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 35vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 127;
        background-color: white;

    }
}

@media screen and (max-width: 1600px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 35vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 127;
        background-color: white;

    }
}

@media screen and (max-width: 1500px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 35vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 127;
        background-color: white;

    }
}

@media screen and (max-width: 1400px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 35vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 127;
        background-color: white;

    }
}

@media screen and (max-width: 1380px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 35vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 127;
        background-color: white;

    }
}

@media screen and (max-width: 1300px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 35vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 127;
        background-color: white;

    }
}

@media screen and (max-width: 1200px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 35vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 127;
        background-color: white;

    }
}

@media screen and (max-width: 1100px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 35vw;
        filter: inherit;
        z-index: 100;
        transition: transform 0.5s ease-in-out, width 0.5s ease-in-out;
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 127;
        background-color: white;

    }
}

@media screen and (max-width: 800px) {
    :root {
        --index: calc(1vw + 1vh);
        --transition: cubic-bezier(.1, .7, 0, 1);
    }



    .wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 65vh;
        width: 64%;
        margin: auto;
    }

    .items {
        display: flex;
        gap: 0.4rem;
        perspective: calc(var(--index) * 35);
    }

    .item {
        width: calc(var(--index) * 2.0);
        height: calc(var(--index) * 12);
        background-color: #222;
        background-size: cover;
        background-position: center;
        cursor: pointer;
        filter: grayscale(1) brightness(.5);
        transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
        will-change: transform, filter, rotateY, width;
    }

    .item::before,
    .item::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 20px;
        right: calc(var(--index) * -1);
    }

    .item::after {
        left: calc(var(--index) * -1);
    }

    .items .item:hover {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 10));
    }

    /*Right*/

    .items .item:hover+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
        z-index: -1;
    }

    .items .item:hover+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
        z-index: -2;
    }

    .items .item:hover+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
        z-index: -3;
    }

    .items .item:hover+*+*+*+* {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
        z-index: -4;
    }


    /*Left*/

    .items .item:has(+ :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
    }

    .items .item:has(+ * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
    }

    .items .item:has(+ * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
    }

    .items .item:has(+ * + * + * + :hover) {
        filter: inherit;
        transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
    }

    .items .item:active,
    .items .item:focus {
        width: 35vw;
        filter: inherit;
        z-index: 100;
        transform: translateZ(calc(var(--index)* 10));
        margin: 0 .45vw;
        background-size: contain;
        background-repeat: no-repeat;
        height: auto;
        aspect-ratio: 200 / 127;
        background-color: white;

    }
}

@media screen and (max-width: 600px) {
    .wrapper {
        display: none;
    }

    .images-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        max-width: 93%;
        margin: auto;
        grid-gap: 15px;
        margin: auto;
    }

    .images-container a img {
        width: 100%;

    }

    /*!
     * baguetteBox.js
     * @author  feimosi
     * @version 1.11.1
     * @url https://github.com/feimosi/baguetteBox.js
     */
    #baguetteBox-overlay {
        display: none;
        opacity: 0;
        position: fixed;
        overflow: hidden;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1000000;
        background-color: #222;
        background-color: rgba(0, 0, 0, .8);
        -webkit-transition: opacity .5s ease;
        transition: opacity .5s ease
    }

    #baguetteBox-overlay.visible {
        opacity: 1
    }

    #baguetteBox-overlay .full-image {
        display: inline-block;
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center
    }

    #baguetteBox-overlay .full-image figure {
        display: inline;
        margin: 0;
        height: 100%
    }

    #baguetteBox-overlay .full-image img {
        display: inline-block;
        width: auto;
        height: auto;
        max-height: 100%;
        max-width: 100%;
        vertical-align: middle;
        -webkit-box-shadow: 0 0 8px rgba(0, 0, 0, .6);
        -moz-box-shadow: 0 0 8px rgba(0, 0, 0, .6);
        box-shadow: 0 0 8px rgba(0, 0, 0, .6)
    }

    #baguetteBox-overlay .full-image figcaption {
        display: block;
        position: absolute;
        bottom: 0;
        width: 100%;
        text-align: center;
        line-height: 1.8;
        white-space: normal;
        color: #ccc;
        background-color: #000;
        background-color: rgba(0, 0, 0, .6);
        font-family: sans-serif
    }

    #baguetteBox-overlay .full-image:before {
        content: "";
        display: inline-block;
        height: 50%;
        width: 1px;
        margin-right: -1px
    }

    #baguetteBox-slider {
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 100%;
        white-space: nowrap;
        -webkit-transition: left .4s ease, -webkit-transform .4s ease;
        transition: left .4s ease, -webkit-transform .4s ease;
        transition: left .4s ease, transform .4s ease;
        transition: left .4s ease, transform .4s ease, -webkit-transform .4s ease, -moz-transform .4s ease
    }

    #baguetteBox-slider.bounce-from-right {
        -webkit-animation: bounceFromRight .4s ease-out;
        animation: bounceFromRight .4s ease-out
    }

    #baguetteBox-slider.bounce-from-left {
        -webkit-animation: bounceFromLeft .4s ease-out;
        animation: bounceFromLeft .4s ease-out
    }

    @-webkit-keyframes bounceFromRight {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: -30px
        }
    }

    @keyframes bounceFromRight {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: -30px
        }
    }

    @-webkit-keyframes bounceFromLeft {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: 30px
        }
    }

    @keyframes bounceFromLeft {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: 30px
        }
    }

    .baguetteBox-button#next-button,
    .baguetteBox-button#previous-button {
        top: 50%;
        top: calc(50% - 30px);
        width: 44px;
        height: 60px
    }

    .baguetteBox-button {
        position: absolute;
        cursor: pointer;
        outline: 0;
        padding: 0;
        margin: 0;
        border: 0;
        -moz-border-radius: 15%;
        border-radius: 15%;
        background-color: #323232;
        background-color: rgba(50, 50, 50, .5);
        color: #ddd;
        font: 1.6em sans-serif;
        -webkit-transition: background-color .4s ease;
        transition: background-color .4s ease
    }

    .baguetteBox-button:focus,
    .baguetteBox-button:hover {
        background-color: rgba(50, 50, 50, .9)
    }

    .baguetteBox-button#next-button {
        right: 2%
    }

    .baguetteBox-button#previous-button {
        left: 2%
    }

    .baguetteBox-button#close-button {
        top: 20px;
        right: 2%;
        right: calc(2% + 6px);
        width: 30px;
        height: 30px
    }

    .baguetteBox-button svg {
        position: absolute;
        left: 0;
        top: 0
    }

    .baguetteBox-spinner {
        width: 40px;
        height: 40px;
        display: inline-block;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-top: -20px;
        margin-left: -20px
    }

    .baguetteBox-double-bounce1,
    .baguetteBox-double-bounce2 {
        width: 100%;
        height: 100%;
        -moz-border-radius: 50%;
        border-radius: 50%;
        background-color: #fff;
        opacity: .6;
        position: absolute;
        top: 0;
        left: 0;
        -webkit-animation: bounce 2s infinite ease-in-out;
        animation: bounce 2s infinite ease-in-out
    }

    .baguetteBox-double-bounce2 {
        -webkit-animation-delay: -1s;
        animation-delay: -1s
    }

    @-webkit-keyframes bounce {

        0%,
        100% {
            -webkit-transform: scale(0);
            transform: scale(0)
        }

        50% {
            -webkit-transform: scale(1);
            transform: scale(1)
        }
    }

    @keyframes bounce {

        0%,
        100% {
            -webkit-transform: scale(0);
            -moz-transform: scale(0);
            transform: scale(0)
        }

        50% {
            -webkit-transform: scale(1);
            -moz-transform: scale(1);
            transform: scale(1)
        }
    }

}

@media screen and (max-width: 500px) {
    .wrapper {
        display: none;
    }

    .images-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(115px, 1fr));
        max-width: 93%;
        margin: auto;
        grid-gap: 15px;
        margin: auto;
    }

    .images-container a img {
        width: 100%;

    }

    /*!
     * baguetteBox.js
     * @author  feimosi
     * @version 1.11.1
     * @url https://github.com/feimosi/baguetteBox.js
     */
    #baguetteBox-overlay {
        display: none;
        opacity: 0;
        position: fixed;
        overflow: hidden;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1000000;
        background-color: #222;
        background-color: rgba(0, 0, 0, .8);
        -webkit-transition: opacity .5s ease;
        transition: opacity .5s ease
    }

    #baguetteBox-overlay.visible {
        opacity: 1
    }

    #baguetteBox-overlay .full-image {
        display: inline-block;
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center
    }

    #baguetteBox-overlay .full-image figure {
        display: inline;
        margin: 0;
        height: 100%
    }

    #baguetteBox-overlay .full-image img {
        display: inline-block;
        width: auto;
        height: auto;
        max-height: 100%;
        max-width: 100%;
        vertical-align: middle;
        -webkit-box-shadow: 0 0 8px rgba(0, 0, 0, .6);
        -moz-box-shadow: 0 0 8px rgba(0, 0, 0, .6);
        box-shadow: 0 0 8px rgba(0, 0, 0, .6)
    }

    #baguetteBox-overlay .full-image figcaption {
        display: block;
        position: absolute;
        bottom: 0;
        width: 100%;
        text-align: center;
        line-height: 1.8;
        white-space: normal;
        color: #ccc;
        background-color: #000;
        background-color: rgba(0, 0, 0, .6);
        font-family: sans-serif
    }

    #baguetteBox-overlay .full-image:before {
        content: "";
        display: inline-block;
        height: 50%;
        width: 1px;
        margin-right: -1px
    }

    #baguetteBox-slider {
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 100%;
        white-space: nowrap;
        -webkit-transition: left .4s ease, -webkit-transform .4s ease;
        transition: left .4s ease, -webkit-transform .4s ease;
        transition: left .4s ease, transform .4s ease;
        transition: left .4s ease, transform .4s ease, -webkit-transform .4s ease, -moz-transform .4s ease
    }

    #baguetteBox-slider.bounce-from-right {
        -webkit-animation: bounceFromRight .4s ease-out;
        animation: bounceFromRight .4s ease-out
    }

    #baguetteBox-slider.bounce-from-left {
        -webkit-animation: bounceFromLeft .4s ease-out;
        animation: bounceFromLeft .4s ease-out
    }

    @-webkit-keyframes bounceFromRight {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: -30px
        }
    }

    @keyframes bounceFromRight {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: -30px
        }
    }

    @-webkit-keyframes bounceFromLeft {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: 30px
        }
    }

    @keyframes bounceFromLeft {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: 30px
        }
    }

    .baguetteBox-button#next-button,
    .baguetteBox-button#previous-button {
        top: 50%;
        top: calc(50% - 30px);
        width: 44px;
        height: 60px
    }

    .baguetteBox-button {
        position: absolute;
        cursor: pointer;
        outline: 0;
        padding: 0;
        margin: 0;
        border: 0;
        -moz-border-radius: 15%;
        border-radius: 15%;
        background-color: #323232;
        background-color: rgba(50, 50, 50, .5);
        color: #ddd;
        font: 1.6em sans-serif;
        -webkit-transition: background-color .4s ease;
        transition: background-color .4s ease
    }

    .baguetteBox-button:focus,
    .baguetteBox-button:hover {
        background-color: rgba(50, 50, 50, .9)
    }

    .baguetteBox-button#next-button {
        right: 2%
    }

    .baguetteBox-button#previous-button {
        left: 2%
    }

    .baguetteBox-button#close-button {
        top: 20px;
        right: 2%;
        right: calc(2% + 6px);
        width: 30px;
        height: 30px
    }

    .baguetteBox-button svg {
        position: absolute;
        left: 0;
        top: 0
    }

    .baguetteBox-spinner {
        width: 40px;
        height: 40px;
        display: inline-block;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-top: -20px;
        margin-left: -20px
    }

    .baguetteBox-double-bounce1,
    .baguetteBox-double-bounce2 {
        width: 100%;
        height: 100%;
        -moz-border-radius: 50%;
        border-radius: 50%;
        background-color: #fff;
        opacity: .6;
        position: absolute;
        top: 0;
        left: 0;
        -webkit-animation: bounce 2s infinite ease-in-out;
        animation: bounce 2s infinite ease-in-out
    }

    .baguetteBox-double-bounce2 {
        -webkit-animation-delay: -1s;
        animation-delay: -1s
    }

    @-webkit-keyframes bounce {

        0%,
        100% {
            -webkit-transform: scale(0);
            transform: scale(0)
        }

        50% {
            -webkit-transform: scale(1);
            transform: scale(1)
        }
    }

    @keyframes bounce {

        0%,
        100% {
            -webkit-transform: scale(0);
            -moz-transform: scale(0);
            transform: scale(0)
        }

        50% {
            -webkit-transform: scale(1);
            -moz-transform: scale(1);
            transform: scale(1)
        }
    }

}

@media screen and (max-width: 400px) {
    .wrapper {
        display: none;
    }

    .images-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
        max-width: 93%;
        margin: auto;
        grid-gap: 15px;
        margin: auto;
    }

    .images-container a img {
        width: 100%;

    }

    /*!
     * baguetteBox.js
     * @author  feimosi
     * @version 1.11.1
     * @url https://github.com/feimosi/baguetteBox.js
     */
    #baguetteBox-overlay {
        display: none;
        opacity: 0;
        position: fixed;
        overflow: hidden;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1000000;
        background-color: #222;
        background-color: rgba(0, 0, 0, .8);
        -webkit-transition: opacity .5s ease;
        transition: opacity .5s ease
    }

    #baguetteBox-overlay.visible {
        opacity: 1
    }

    #baguetteBox-overlay .full-image {
        display: inline-block;
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center
    }

    #baguetteBox-overlay .full-image figure {
        display: inline;
        margin: 0;
        height: 100%
    }

    #baguetteBox-overlay .full-image img {
        display: inline-block;
        width: auto;
        height: auto;
        max-height: 100%;
        max-width: 100%;
        vertical-align: middle;
        -webkit-box-shadow: 0 0 8px rgba(0, 0, 0, .6);
        -moz-box-shadow: 0 0 8px rgba(0, 0, 0, .6);
        box-shadow: 0 0 8px rgba(0, 0, 0, .6)
    }

    #baguetteBox-overlay .full-image figcaption {
        display: block;
        position: absolute;
        bottom: 0;
        width: 100%;
        text-align: center;
        line-height: 1.8;
        white-space: normal;
        color: #ccc;
        background-color: #000;
        background-color: rgba(0, 0, 0, .6);
        font-family: sans-serif
    }

    #baguetteBox-overlay .full-image:before {
        content: "";
        display: inline-block;
        height: 50%;
        width: 1px;
        margin-right: -1px
    }

    #baguetteBox-slider {
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 100%;
        white-space: nowrap;
        -webkit-transition: left .4s ease, -webkit-transform .4s ease;
        transition: left .4s ease, -webkit-transform .4s ease;
        transition: left .4s ease, transform .4s ease;
        transition: left .4s ease, transform .4s ease, -webkit-transform .4s ease, -moz-transform .4s ease
    }

    #baguetteBox-slider.bounce-from-right {
        -webkit-animation: bounceFromRight .4s ease-out;
        animation: bounceFromRight .4s ease-out
    }

    #baguetteBox-slider.bounce-from-left {
        -webkit-animation: bounceFromLeft .4s ease-out;
        animation: bounceFromLeft .4s ease-out
    }

    @-webkit-keyframes bounceFromRight {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: -30px
        }
    }

    @keyframes bounceFromRight {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: -30px
        }
    }

    @-webkit-keyframes bounceFromLeft {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: 30px
        }
    }

    @keyframes bounceFromLeft {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: 30px
        }
    }

    .baguetteBox-button#next-button,
    .baguetteBox-button#previous-button {
        top: 50%;
        top: calc(50% - 30px);
        width: 44px;
        height: 60px
    }

    .baguetteBox-button {
        position: absolute;
        cursor: pointer;
        outline: 0;
        padding: 0;
        margin: 0;
        border: 0;
        -moz-border-radius: 15%;
        border-radius: 15%;
        background-color: #323232;
        background-color: rgba(50, 50, 50, .5);
        color: #ddd;
        font: 1.6em sans-serif;
        -webkit-transition: background-color .4s ease;
        transition: background-color .4s ease
    }

    .baguetteBox-button:focus,
    .baguetteBox-button:hover {
        background-color: rgba(50, 50, 50, .9)
    }

    .baguetteBox-button#next-button {
        right: 2%
    }

    .baguetteBox-button#previous-button {
        left: 2%
    }

    .baguetteBox-button#close-button {
        top: 20px;
        right: 2%;
        right: calc(2% + 6px);
        width: 30px;
        height: 30px
    }

    .baguetteBox-button svg {
        position: absolute;
        left: 0;
        top: 0
    }

    .baguetteBox-spinner {
        width: 40px;
        height: 40px;
        display: inline-block;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-top: -20px;
        margin-left: -20px
    }

    .baguetteBox-double-bounce1,
    .baguetteBox-double-bounce2 {
        width: 100%;
        height: 100%;
        -moz-border-radius: 50%;
        border-radius: 50%;
        background-color: #fff;
        opacity: .6;
        position: absolute;
        top: 0;
        left: 0;
        -webkit-animation: bounce 2s infinite ease-in-out;
        animation: bounce 2s infinite ease-in-out
    }

    .baguetteBox-double-bounce2 {
        -webkit-animation-delay: -1s;
        animation-delay: -1s
    }

    @-webkit-keyframes bounce {

        0%,
        100% {
            -webkit-transform: scale(0);
            transform: scale(0)
        }

        50% {
            -webkit-transform: scale(1);
            transform: scale(1)
        }
    }

    @keyframes bounce {

        0%,
        100% {
            -webkit-transform: scale(0);
            -moz-transform: scale(0);
            transform: scale(0)
        }

        50% {
            -webkit-transform: scale(1);
            -moz-transform: scale(1);
            transform: scale(1)
        }
    }

}

@media screen and (max-width: 360px) {
    .wrapper {
        display: none;
    }

    .images-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(90px, 1fr));
        max-width: 90%;
        margin: auto;
        grid-gap: 15px;
        margin: auto;
    }

    .images-container a img {
        width: 100%;

    }

    #baguetteBox-overlay {
        display: none;
        opacity: 0;
        position: fixed;
        overflow: hidden;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1000000;
        background-color: #222;
        background-color: rgba(0, 0, 0, .8);
        -webkit-transition: opacity .5s ease;
        transition: opacity .5s ease
    }

    #baguetteBox-overlay.visible {
        opacity: 1
    }

    #baguetteBox-overlay .full-image {
        display: inline-block;
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center
    }

    #baguetteBox-overlay .full-image figure {
        display: inline;
        margin: 0;
        height: 100%
    }

    #baguetteBox-overlay .full-image img {
        display: inline-block;
        width: auto;
        height: auto;
        max-height: 100%;
        max-width: 100%;
        vertical-align: middle;
        -webkit-box-shadow: 0 0 8px rgba(0, 0, 0, .6);
        -moz-box-shadow: 0 0 8px rgba(0, 0, 0, .6);
        box-shadow: 0 0 8px rgba(0, 0, 0, .6)
    }

    #baguetteBox-overlay .full-image figcaption {
        display: block;
        position: absolute;
        bottom: 0;
        width: 100%;
        text-align: center;
        line-height: 1.8;
        white-space: normal;
        color: #ccc;
        background-color: #000;
        background-color: rgba(0, 0, 0, .6);
        font-family: sans-serif
    }

    #baguetteBox-overlay .full-image:before {
        content: "";
        display: inline-block;
        height: 50%;
        width: 1px;
        margin-right: -1px
    }

    #baguetteBox-slider {
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 100%;
        white-space: nowrap;
        -webkit-transition: left .4s ease, -webkit-transform .4s ease;
        transition: left .4s ease, -webkit-transform .4s ease;
        transition: left .4s ease, transform .4s ease;
        transition: left .4s ease, transform .4s ease, -webkit-transform .4s ease, -moz-transform .4s ease
    }

    #baguetteBox-slider.bounce-from-right {
        -webkit-animation: bounceFromRight .4s ease-out;
        animation: bounceFromRight .4s ease-out
    }

    #baguetteBox-slider.bounce-from-left {
        -webkit-animation: bounceFromLeft .4s ease-out;
        animation: bounceFromLeft .4s ease-out
    }

    @-webkit-keyframes bounceFromRight {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: -30px
        }
    }

    @keyframes bounceFromRight {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: -30px
        }
    }

    @-webkit-keyframes bounceFromLeft {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: 30px
        }
    }

    @keyframes bounceFromLeft {

        0%,
        100% {
            margin-left: 0
        }

        50% {
            margin-left: 30px
        }
    }

    .baguetteBox-button#next-button,
    .baguetteBox-button#previous-button {
        top: 50%;
        top: calc(50% - 30px);
        width: 44px;
        height: 60px
    }

    .baguetteBox-button {
        position: absolute;
        cursor: pointer;
        outline: 0;
        padding: 0;
        margin: 0;
        border: 0;
        -moz-border-radius: 15%;
        border-radius: 15%;
        background-color: #323232;
        background-color: rgba(50, 50, 50, .5);
        color: #ddd;
        font: 1.6em sans-serif;
        -webkit-transition: background-color .4s ease;
        transition: background-color .4s ease
    }

    .baguetteBox-button:focus,
    .baguetteBox-button:hover {
        background-color: rgba(50, 50, 50, .9)
    }

    .baguetteBox-button#next-button {
        right: 2%
    }

    .baguetteBox-button#previous-button {
        left: 2%
    }

    .baguetteBox-button#close-button {
        top: 20px;
        right: 2%;
        right: calc(2% + 6px);
        width: 30px;
        height: 30px
    }

    .baguetteBox-button svg {
        position: absolute;
        left: 0;
        top: 0
    }

    .baguetteBox-spinner {
        width: 40px;
        height: 40px;
        display: inline-block;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-top: -20px;
        margin-left: -20px
    }

    .baguetteBox-double-bounce1,
    .baguetteBox-double-bounce2 {
        width: 100%;
        height: 100%;
        -moz-border-radius: 50%;
        border-radius: 50%;
        background-color: #fff;
        opacity: .6;
        position: absolute;
        top: 0;
        left: 0;
        -webkit-animation: bounce 2s infinite ease-in-out;
        animation: bounce 2s infinite ease-in-out
    }

    .baguetteBox-double-bounce2 {
        -webkit-animation-delay: -1s;
        animation-delay: -1s
    }

    @-webkit-keyframes bounce {

        0%,
        100% {
            -webkit-transform: scale(0);
            transform: scale(0)
        }

        50% {
            -webkit-transform: scale(1);
            transform: scale(1)
        }
    }

    @keyframes bounce {

        0%,
        100% {
            -webkit-transform: scale(0);
            -moz-transform: scale(0);
            transform: scale(0)
        }

        50% {
            -webkit-transform: scale(1);
            -moz-transform: scale(1);
            transform: scale(1)
        }
    }

}